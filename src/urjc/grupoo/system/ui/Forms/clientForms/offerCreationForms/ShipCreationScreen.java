package urjc.grupoo.system.ui.Forms.clientForms.offerCreationForms;

import java.util.regex.Matcher;
import java.util.regex.Pattern;
import urjc.grupoo.system.ui.Forms.clientForms.offerCreationForms.crationHandlers.ShipCreationHandler;
import urjc.grupoo.system.ui.Forms.clientForms.offerCreationForms.crationHandlers.OfferCreationHandler;
import urjc.grupoo.system.ui.Forms.clientForms.offerCreationForms.shipsForms.StationCreationScreen;
import urjc.grupoo.system.ui.Forms.clientForms.offerCreationForms.shipsForms.DestructorCreationScreen;
import urjc.grupoo.system.ui.Forms.clientForms.offerCreationForms.shipsForms.FighterCreationScreen;
import urjc.grupoo.system.ui.Forms.clientForms.offerCreationForms.shipsForms.CargoCreationScreen;
import urjc.grupoo.data.shipsData.Spaceship;
import urjc.grupoo.system.ui.SystemSession;

/**
 *
 * @author Gonzalo Ortega
 */
public class ShipCreationScreen extends javax.swing.JPanel {

    private final SystemSession session;
    private final ShipCreationHandler handler;
    private final OfferCreationHandler offerhandler;

    /**
     * Creates new form ShipCreationScreen
     *
     * @param session
     * @param handler
     * @param offerhandler
     */
    public ShipCreationScreen(SystemSession session, ShipCreationHandler handler, OfferCreationHandler offerhandler) {
        this.session = session;
        this.handler = handler;
        this.offerhandler = offerhandler;
        initComponents();
    }

    /**
     * Saves the input data in the ShipCreationHandler
     * 
     * @return TRUE if all parameters are of the correct type.
     */
    private boolean checkParameters() {
        try {
            handler.setRegNumber(registerTextField.getText());
            handler.setSpeed(Integer.parseInt(speedTextField.getText()));
            handler.setCrewNumber(Integer.parseInt(tripulantsTextField.getText()));
            String selectedPropulsion1 = (String) propulsion1Selector.getSelectedItem();
            
            if(!checkRegNumber(registerTextField.getText())){
                incorrectLabel.setText("Formato de registro incorrecto. Formato: LNNNNLLL");
                return false;
            }
            
            switch (selectedPropulsion1) {
                case "Motor de curvatura":
                    handler.setPropulsion1(Spaceship.warpdrive);
                    break;
                case "Compresor de traza":
                    handler.setPropulsion1(Spaceship.tracecompressor);
                    break;
                case "Motor FTL":
                    handler.setPropulsion1(Spaceship.ftldrive);
                    break;
                case "Velas solares":
                    handler.setPropulsion1(Spaceship.solarsail);
                    break;
                case "Motor iónico":
                    handler.setPropulsion1(Spaceship.ionthruster);
                    break;
            }

            String selectedPropulsion2 = (String) propulsion2Selector.getSelectedItem();
            switch (selectedPropulsion2) {
                case "Motor de curvatura":
                    handler.setPropulsion2(Spaceship.warpdrive);
                    break;
                case "Compresor de traza":
                    handler.setPropulsion2(Spaceship.tracecompressor);
                    break;
                case "Motor FTL":
                    handler.setPropulsion2(Spaceship.ftldrive);
                    break;
                case "Velas solares":
                    handler.setPropulsion2(Spaceship.solarsail);
                    break;
                case "Motor iónico":
                    handler.setPropulsion2(Spaceship.ionthruster);
                    break;
            }
        } catch (NumberFormatException e) {
            incorrectLabel.setText("Revise los datos introducidos.");
            return false;
        }
        incorrectLabel.setText("");
        return true;
    }

    /**
     * Chequea el formato del registro
     * @param regnumber
     * @return true si el formato es correcto
     */
    private boolean checkRegNumber(String regnumber){
            
        regnumber = regnumber.toUpperCase();
        Pattern patron = Pattern.compile("[A-Z]{1}[0-9]{4}[A-Z]{3}");
        Matcher mat = patron.matcher(regnumber);
        
        return mat.matches();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        propulsion2Label = new javax.swing.JLabel();
        tripulantsLabel = new javax.swing.JLabel();
        tripulantsTextField = new javax.swing.JTextField();
        doneButton = new javax.swing.JButton();
        nameLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        propulsion1Label = new javax.swing.JLabel();
        registerLabel = new javax.swing.JLabel();
        registerTextField = new javax.swing.JTextField();
        propulsion1Selector = new javax.swing.JComboBox<>();
        propulsion2Selector = new javax.swing.JComboBox<>();
        shipTypeSelector = new javax.swing.JComboBox<>();
        speedTextField = new javax.swing.JTextField();
        registerLabel1 = new javax.swing.JLabel();
        incorrectLabel = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        propulsion2Label.setText("Tipo de propulsión 2");

        tripulantsLabel.setText("Número de tripulantes");

        doneButton.setText("Siguiente");
        doneButton.setToolTipText("");
        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });

        nameLabel.setText("Tipo de nave");

        backButton.setText("<");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        propulsion1Label.setText("Tipo de propulsión 1");

        registerLabel.setText("Número de registro");

        propulsion1Selector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Motor de curvatura", "Compresor de traza", "Motor FTL", "Velas solares", "Motor iónico" }));

        propulsion2Selector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Motor de curvatura", "Compresor de traza", "Motor FTL", "Velas solares", "Motor iónico" }));

        shipTypeSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Destructor", "Carguero", "Caza", "Estación Espacial" }));

        registerLabel1.setText("Velocidad sublumínica máxima");

        incorrectLabel.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 519, Short.MAX_VALUE)
                        .addGap(81, 81, 81))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(shipTypeSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(backButton)
                        .addGap(50, 50, 50))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(propulsion1Selector, 0, 243, Short.MAX_VALUE)
                                    .addComponent(propulsion1Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(propulsion2Selector, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(propulsion2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(incorrectLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(doneButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(registerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tripulantsTextField))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(registerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tripulantsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(registerLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(speedTextField)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(shipTypeSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(backButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(propulsion1Label)
                    .addComponent(propulsion2Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(propulsion1Selector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(propulsion2Selector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(registerLabel1)
                    .addComponent(speedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registerLabel)
                    .addComponent(tripulantsLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tripulantsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(incorrectLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(doneButton)
                .addGap(48, 48, 48))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
        if (checkParameters()) {
            String selectedType = (String) shipTypeSelector.getSelectedItem();
            switch (selectedType) {
                case "Destructor":
                    handler.setType(Spaceship.destructor);
                    session.getController().addNewPanel(new DestructorCreationScreen(session, handler, offerhandler));
                    break;
                case "Carguero":
                    handler.setType(Spaceship.cargo);
                    session.getController().addNewPanel(new CargoCreationScreen(session, handler, offerhandler));
                    break;
                case "Caza":
                    handler.setType(Spaceship.fighter);
                    session.getController().addNewPanel(new FighterCreationScreen(session, handler, offerhandler));
                    break;
                case "Estación Espacial":
                    offerhandler.addStationShipList();
                    handler.setType(Spaceship.station);
                    session.getController().addNewPanel(new StationCreationScreen(session, handler, offerhandler));
                    break;
            }
        }
    }//GEN-LAST:event_doneButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        session.getController().goBack();
        setVisible(false);
    }//GEN-LAST:event_backButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton doneButton;
    private javax.swing.JLabel incorrectLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel propulsion1Label;
    private javax.swing.JComboBox<String> propulsion1Selector;
    private javax.swing.JLabel propulsion2Label;
    private javax.swing.JComboBox<String> propulsion2Selector;
    private javax.swing.JLabel registerLabel;
    private javax.swing.JLabel registerLabel1;
    private javax.swing.JTextField registerTextField;
    private javax.swing.JComboBox<String> shipTypeSelector;
    private javax.swing.JTextField speedTextField;
    private javax.swing.JLabel tripulantsLabel;
    private javax.swing.JTextField tripulantsTextField;
    // End of variables declaration//GEN-END:variables
}
